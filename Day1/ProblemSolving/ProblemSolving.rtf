{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Brandyn Stroud\
7/7/2015\
Scalable Data Infrastructures\
\
Problem 1- The goal for this problem is to get the cat, parrot, and bag of seed across the river bank without having them interact with (eat) each other.\
\
The only way to make sure that the cat doesn\'92t eat the parrot and the parrot from eating the bag of seed is to take the parrot first. Then on the way back the man must get the cat and bring it to the other side. Then he must get the parrot while he is there and bring it back to the other side so he can drop the bird off and pick up the bag of seed. Once the cat and seed is one the other side of the river, the man can then get the parrot and bring it to the other side.\
\
The method for ensuring that nothing had gotten eaten was making sure that you took the threat with you and neutralizing the threat. Leaving the cat and the bag of seed together has no danger and neither does taking the parrot by itself.\
\
I came to this conclusion by thinking how to work around the handicap of only being allowed to take one thing at a time. It does take more trips, but this is the best solution that I have come up with.\
\
Problem 2- The goal here is to successfully select the right pairs of socks.\
\
There doesn\'92t seem to be a definite way to make sure there are matching socks in any situations. The worst case scenario by leaving it up to probability is having to take out each individual sock. \
\
There isn\'92t a real method of solving this. Just get lucky enough to pick the right socks.\
\
I came to this conclusion because there are way too many factors to assume that the person picking the socks will get them after the first time or after pulling all of the socks. Therefore, I have no specific answer for this problem.\
\
Problem 3- }